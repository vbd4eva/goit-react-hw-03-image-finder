{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/ImageGallery/LoadMore/LoadMore.module.css","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","js/apiService.js","components/ImageGallery/LoadMore/LoadMore.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","modalRoot","document","querySelector","Modal","closeModal","e","console","log","Date","now","code","props","onClose","target","currentTarget","window","addEventListener","this","removeEventListener","src","alt","createPortal","className","s","Overlay","onClick","Component","ImageGalleryItem","state","showModal","toggleModal","setState","largeImageURL","ImageGalleryItemImage","ApiService","optionsObj","options","BASE_URL","defaultOptions","page","per_page","key","searchQuery","url","fetch","response","json","then","hits","getUrl","fetchImages","LoadMore","type","Button","loadMore","Status","ImageGallery","gallery","status","apiService","fetchImagesOnSearch","prevProps","prevState","prevSearchQuery","prevGalleryLength","length","stateGalleryLength","isScroll","scrollTo","top","scroll","behavior","documentElement","scrollHeight","getImages","images","justFetchedImages","color","map","id","webformatURL","tags","Searchbar","changeQuery","value","submitForm","preventDefault","trim","toast","onSubmit","toLowerCase","form","button","label","input","autoComplete","autoFocus","placeholder","onChange","App","submitedSearchQuery","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6fd251ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2YVFR\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__F4iko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2sLyU\",\"Modal\":\"Modal_Modal__2wzI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1fi7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"LoadMore_Button__1Uocf\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('keydown', this.closeModal);\r\n    }\r\n\r\n    componentWillUnmount() { \r\n        window.removeEventListener('keydown', this.closeModal);\r\n    }\r\n\r\n    closeModal = (e) => {\r\n        console.log(\"close MODAL\", Date.now());\r\n        if (e.code === 'Escape') this.props.onClose();\r\n        \r\n        if(e.target === e.currentTarget) this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        const { src, alt} = this.props;\r\n        return createPortal(\r\n            <div className={s.Overlay} onClick={this.closeModal}>\r\n                <div className={s.Modal}>\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>,\r\n            modalRoot\r\n        )\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Modal\r\n\r\n","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ImageGalleryItem.module.css';\r\nimport Modal from '../../Modal/Modal';\r\n\r\nclass ImageGalleryItem extends Component {\r\n    state = {\r\n        showModal: false,\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(({ showModal }) =>( {\r\n            showModal: !showModal\r\n        }))\r\n    }\r\n\r\n    render() { \r\n        const {src, alt, largeImageURL} = this.props;\r\n            return (\r\n        <>\r\n            <li className={s.ImageGalleryItem}>\r\n                <img src={src} alt={alt} onClick={this.toggleModal} className={s.ImageGalleryItemImage} />    \r\n            </li>\r\n            {\r\n                this.state.showModal && <Modal src={largeImageURL} alt={alt} onClose={this.toggleModal}/>\r\n            }\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ImageGalleryItem\r\n\r\n","export default class ApiService {\r\n\r\n    constructor(optionsObj){ \r\n        this.options = {\r\n            BASE_URL: 'https://pixabay.com/api/',\r\n            defaultOptions: 'image_type=photo&orientation=horizontal',\r\n            page: 1,\r\n            per_page: 12,\r\n            key: '19030678-ed1e5f4c74f32611df53e834e',\r\n            ...optionsObj\r\n        }\r\n    }\r\n    \r\n    getUrl() {\r\n        const { BASE_URL, defaultOptions, searchQuery, page, per_page, key } = this.options;\r\n        const url = `${BASE_URL}?${defaultOptions}&q=${searchQuery}&page=${page}&per_page=${per_page}&key=${key}`;\r\n        return url;\r\n    }\r\n    async fetchImages(url) { \r\n        // return fetch(url)\r\n        //     .then(response => response.json())\r\n        //     .then(({hits}) => { \r\n        //         this.options.page += 1;\r\n        //         return hits;\r\n        //     })\r\n        //     .catch(console.log);\r\n        try {\r\n            const response = await fetch(url);\r\n            this.options.page += 1;\r\n            return response.json()\r\n                .then(({ hits }) => hits);\r\n        }\r\n        catch (error) {\r\n            console.log(\"Ошибка КЕЧ\", error);\r\n        }\r\n    }\r\n            \r\n    getImages(searchQuery) {\r\n\r\n        if (searchQuery) {\r\n            this.options.searchQuery = searchQuery;\r\n            this.options.page = 1;\r\n        }\r\n            \r\n        \r\n        const url = this.getUrl();\r\n\r\n         return this.fetchImages(url);\r\n    }\r\n}\r\n    \r\n    \r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from './LoadMore.module.css';\r\n\r\n\r\nexport default function LoadMore(props) {\r\n\r\n    function onClick() {\r\n        console.log(\"before loadMore()\");\r\n        props.loadMore();\r\n        console.log(\"after loadMore()\");\r\n\r\n    }\r\n\r\n        return (\r\n            <>\r\n                <button type=\"button\" className={s.Button} onClick={onClick}>Load More</button>\r\n            </>\r\n        )\r\n\r\n}\r\n\r\n    LoadMore.propTypes = {\r\n        loadMore: PropTypes.func.isRequired,\r\n    }","import { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\nimport ApiService from '../../js/apiService';\r\nimport LoadMore from './LoadMore/LoadMore';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\n\r\nclass ImageGallery extends Component {\r\n\r\n    state = {\r\n        gallery: [],\r\n        status: Status.IDLE,\r\n    }\r\n    static propTypes = {\r\n        searchQuery: PropTypes.string.isRequired,\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.fetchImagesOnSearch(this.props.searchQuery);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {  \r\n        const prevSearchQuery = prevProps.searchQuery;\r\n        const prevGalleryLength = prevState.gallery.length;\r\n        const stateGalleryLength = this.state.gallery.length;\r\n        const isScroll = (prevGalleryLength*stateGalleryLength);\r\n\r\n\r\n        if (this.props.searchQuery !== prevSearchQuery) {         // обновилась строка поиска\r\n            this.setState({ gallery: [] });            \r\n\r\n            this.fetchImagesOnSearch(this.props.searchQuery);\r\n        }        \r\n        else if (stateGalleryLength !== prevGalleryLength) {     \r\n            if(isScroll) window.scrollTo({\r\n                top: this.scroll,\r\n                behavior: \"smooth\",\r\n            });\r\n            this.scroll = document.documentElement.scrollHeight - document.querySelector('#searchbar').scrollHeight;\r\n        }\r\n    }\r\n\r\n    apiService = new ApiService();\r\n\r\n    async fetchImagesOnSearch(searchQuery) {\r\n        this.setState({ status: Status.PENDING });  \r\n        //   console.log('фетчим запрос : ', this.props.searchQuery);\r\n\r\n        const justFetchedImages = await this.apiService.getImages(searchQuery)\r\n            .then(images => images);      \r\n\r\n        //если бекэндотдал пустой массив\r\n        if (!justFetchedImages.length) {\r\n            this.setState({ status: Status.REJECTED });\r\n            return;\r\n        }\r\n\r\n        // console.log(\" бекэндотдал НЕ пустой массив\");\r\n        this.setState(({ gallery }) => { \r\n            const fetchedImages = [...gallery, ...justFetchedImages];\r\n            return { gallery: fetchedImages };\r\n        });\r\n\r\n        this.setState({ status: Status.RESOLVED });\r\n\r\n        // console.dir(this.apiService.options);\r\n    }\r\n\r\n    loadMore = () => {\r\n        // console.log(\"ImageGalery load MOre\");        \r\n        this.fetchImagesOnSearch();\r\n    }\r\n\r\n    render() {\r\n        const { status, gallery } = this.state;\r\n        return (\r\n            <>\r\n                {\r\n                    (Status.PENDING === status) && <Loader type='Rings' color=\"#bfbfbf\" className=\"loader\"/>\r\n                }\r\n                {\r\n                    (Status.REJECTED === status) &&  (!gallery.length) && (<h1>Nothing founded</h1>)\r\n                }\r\n                {\r\n                    (!gallery.length)\r\n                    ||\r\n                    <>\r\n                        <ul className={s.ImageGallery}>\r\n                            {gallery.map(\r\n                                ({id, webformatURL, largeImageURL, tags}) =>\r\n                                (<ImageGalleryItem key={id}\r\n                                    src={webformatURL}\r\n                                    largeImageURL={largeImageURL}\r\n                                    alt={tags}\r\n                                />)\r\n                            )}\r\n                        </ul>\r\n                        \r\n                        {(Status.RESOLVED === status) && < LoadMore loadMore={this.loadMore} />}\r\n\r\n                        {(Status.REJECTED === status) &&  <h1>there are no more images....</h1>}\r\n                        \r\n                        \r\n                    </>\r\n\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageGallery\r\n\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport s from './Searchbar.module.css';\r\n\r\n\r\nexport default class Searchbar extends Component{\r\n    state = {\r\n        searchQuery: '',\r\n    }\r\n\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n    }\r\n\r\n\r\n    changeQuery = e => {\r\n        this.setState({ searchQuery: e.target.value });\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        const searchQuery = this.state.searchQuery.trim();\r\n\r\n        // searchQuery - is emty\r\n        if (!searchQuery) {\r\n            toast(\"to finds some, needs type some\");\r\n            this.setState({ searchQuery: '' });\r\n            return;\r\n        }\r\n\r\n\r\n        this.props.onSubmit(searchQuery.toLowerCase());\r\n    }\r\n\r\n    render() {\r\n                return (\r\n                    <>\r\n                        <header className={s.Searchbar} id=\"searchbar\">\r\n                            <form className={s.form} onSubmit={this.submitForm}>\r\n                                <button type=\"submit\" className={s.button}>\r\n                                    <span className={s.label}>Search</span>\r\n                                </button>\r\n\r\n                                <input\r\n                                    className={s.input}\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    autoFocus\r\n                                    placeholder=\"Search images and photos\"\r\n                                    onChange={this.changeQuery}\r\n                                    value={this.state.searchQuery}\r\n                                />\r\n                            </form>\r\n                        </header>\r\n                    \r\n            <ToastContainer/>\r\n                    </>\r\n        )\r\n    }\r\n    \r\n}\r\n","import { Component } from 'react';\nimport ImageGallery from './components/ImageGallery/ImageGallery'\nimport Searchbar from './components/Searchbar/Searchbar'\n\nclass App extends Component {\n  state = {\n    submitedSearchQuery: '',\n  }\n\n  \n  handleFormSubmit = submitedSearchQuery => {\n    if(submitedSearchQuery !== this.state.submitedSearchQuery) this.setState({ submitedSearchQuery });\n  }\n\n  render() {\n      return (\n    <div className=\"App\">\n          <Searchbar onSubmit={this.handleFormSubmit} />\n\n          {\n            this.state.submitedSearchQuery\n            &&\n            <ImageGallery searchQuery={this.state.submitedSearchQuery}/>\n          }\n          \n    </div>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__mKfzV\",\"form\":\"Searchbar_form__2M-7G\",\"button\":\"Searchbar_button__1n0UZ\",\"label\":\"Searchbar_label__1TgjR\",\"input\":\"Searchbar_input__3BNr0\"};"],"sourceRoot":""}